#!/bin/bash

source "${CYCLECLOUD_PROJECT_PATH}/default/files/default.sh" || exit 1

CLUSTER_NAME=$(jq -r .cluster "$CONFIG_PATH") || fail

function fail() {
    local errorMsg="$1"
    [[ -z "$errorMsg" ]] || echo -e "ERROR: $errorMsg" >&2
    exit 2
}

function get_package_name() {
    PACKAGE_TYPE=$1 # Contains "server", "client", or "execution"

    if [[ "${PBSPRO_VERSION%%.*}" -lt 20 ]]; then
        echo "pbspro-${PACKAGE_TYPE}-${PBSPRO_VERSION}.x86_64.rpm"
    else
        echo "openpbs-${PACKAGE_TYPE}-${PBSPRO_VERSION}.x86_64.rpm"
    fi
}

function get_server_hostname() {
    readonly MAX_RETRIES=10
    readonly RETRY_DELAY=15
    ATTEMPT=1

    # Read server hostname from azpbs.env config file generated by server node
    if [[ ! -e "/sched/${CLUSTER_NAME}/azpbs.env" ]]; then
        while [[ $ATTEMPT -lt $MAX_RETRIES ]]; do
            sleep $RETRY_DELAY
            ((ATTEMPT+=1))
            
            if [[ -e "/sched/${CLUSTER_NAME}/azpbs.env" ]]; then
                break;
            fi
        done

        if [[ $ATTEMPT == $MAX_RETRIES ]]; then
            echo "Failed to read /sched/${CLUSTER_NAME}/azpbs.env after $MAX_RETRIES attempts. Exiting." 1>&2
            exit 1
        fi
    fi
    source "/sched/${CLUSTER_NAME}/azpbs.env" || exit 1
    echo "$PBS_SCHEDULER_HOSTNAME"
}